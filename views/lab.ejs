<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Lab Booking</title>
  <link rel="stylesheet" href="/stylesheets/lab.css">
    <!-- Bootstrap Icons CDN -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
</head>
<body>

  <nav class="mb-4" id="navbar">
    <ul class="nav">
      <li><a href="/lab" class="nav-link"><i class="bi bi-house-fill" style="font-size: 25px;"></i></a></li>
    </ul>
    <ul>
    <p>Laboratory Booking Dashboard</p>
    <ul>
      <li>
      <a href="#" onclick="document.getElementById('course-form').submit();" class="nav-link">Edit Schedule</a>
      <form id="course-form" action="/course-form" method="POST" style="display: none;"></form>
      <a href="/lab/logout" onclick="event.preventDefault(); document.getElementById('logout-form').submit();" class="nav-link">Log Out</a>
      </li>
      <form id="logout-form" action="/lab/logout" method="POST" style="display: none;"></form>
    </ul>
  </nav>


  <div class="availability-container">
    <h3>Lab Availability for <span id="current-date-display"><%= initialDate %></span></h3>
    <div id="daily-availability">

    </div>
  </div>

  <h2>Lab Booking Form</h2>
  <form id="booking-form" action="/lab/confirm" method="POST">
    <div class="form-group">
      <label>User Type:</label>
      <select name="user_type" required>
        <option value="">-- Select User Type --</option>
        <option value="Student">Student</option>
        <option value="Faculty">Faculty</option>
      </select>
    </div>

    <div class="form-group">
      <label>Section:</label>
      <input type="text" name="section" required>
    </div>

    <div class="form-group">
      <label>Subject:</label>
      <input type="text" name="subject" required>
    </div>

    <div class="form-group">
      <label>Purpose:</label>
      <input type="text" name="purpose" required>
    </div>

    <div class="form-group">
      <label>Lab:</label>
      <select name="lab" id="lab" required>
        <option value="">--Select Lab--</option>
        <% ['Lab 1', 'Lab 2', 'Lab 3'].forEach(lab => { %>
          <option value="<%= lab %>">
            <%= lab %>
          </option>
        <% }) %>
      </select>
    </div>

    <div class="form-group">
      <label>Booking Date:</label>
      <input type="date" name="booking_date" id="booking_date" 
             value="<%= initialDate %>" min="<%= initialDate %>" required>
    </div>

    <div class="form-group">
      <label>Start Time:</label>
      <input type="time" name="start_time" id="start_time" required>
    </div>

    <div class="form-group">
      <label>End Time:</label>
      <input type="time" name="end_time" id="end_time" required>
    </div>

    <div id="availability-status"></div>

    <button type="submit" id="submit-btn">Proceed to Confirmation</button>
  </form>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const labSelect = document.getElementById('lab');
      const dateInput = document.getElementById('booking_date');
      const startInput = document.getElementById('start_time');
      const endInput = document.getElementById('end_time');
      const statusDiv = document.getElementById('availability-status');
      const submitBtn = document.getElementById('submit-btn');
      const dailyAvailabilityList = document.getElementById('daily-availability');
      const currentDateDisplay = document.getElementById('current-date-display');
      const bookingForm = document.getElementById('booking-form');

      // Format time for display
      const formatTime = (timeStr) => {
        if (!timeStr) return '';
        const [hours, minutes] = timeStr.split(':');
        const hour = parseInt(hours);
        return `${hour > 12 ? hour - 12 : hour}:${minutes} ${hour >= 12 ? 'PM' : 'AM'}`;
      };

      // Update the detailed availability display
      const updateDailyLabStatus = async () => {
        const date = dateInput.value;
        if (!date) return;

        currentDateDisplay.textContent = date;

        try {
          const response = await fetch(`/lab/availability/${date}`);
          const labDetails = await response.json();

          let html = '';
          for (const lab in labDetails) {
            const labInfo = labDetails[lab];
            html += `
              <div class="lab-card">
                <div class="lab-name ${labInfo.available ? 'available' : 'unavailable'}">
                  ${lab}: ${labInfo.available ? 'Available' : 'Booked'}
                </div>
                ${labInfo.bookedSlots.length > 0 ? `
                  <div class="booked-slots">
                    Booked times: 
                    ${labInfo.bookedSlots.map(slot => `
                      <span class="time-slot">${formatTime(slot.start)} - ${formatTime(slot.end)}</span>
                    `).join('')}
                  </div>
                ` : ''}
              </div>
            `;
          }
          dailyAvailabilityList.innerHTML = html;

        } catch (err) {
          console.error('Failed to fetch lab availability:', err);
          dailyAvailabilityList.innerHTML = '<div style="color: orange;">⚠️ Error loading availability details</div>';
        }
      };

      // Check for conflicts when form is submitted
      bookingForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const lab = labSelect.value;
        const booking_date = dateInput.value;
        const start_time = startInput.value;
        const end_time = endInput.value;

        if (!lab || !booking_date || !start_time || !end_time) {
          alert('Please fill in all required fields');
          return;
        }

        try {
          const response = await fetch('/lab/check-availability', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ lab, booking_date, start_time, end_time })
          });

          const result = await response.json();
          
          if (result.available) {
            // If available, submit the form
            bookingForm.submit();
          } else {
            alert('Laboratory room is already booked for the selected time slot. Please choose a different time.');
          }
        } catch (err) {
          console.error('Error checking availability:', err);
          alert('Error checking lab availability. Please try again.');
        }
      });

      // Set initial time values (current time + 1 hour)
      const now = new Date();
      const startTime = new Date(now.getTime() + 60 * 60 * 1000); // Current time + 1 hour
      const endTime = new Date(startTime.getTime() + 60 * 60 * 1000); // Start time + 1 hour

      startInput.value = `${String(startTime.getHours()).padStart(2, '0')}:${String(startTime.getMinutes()).padStart(2, '0')}`;
      endInput.value = `${String(endTime.getHours()).padStart(2, '0')}:${String(endTime.getMinutes()).padStart(2, '0')}`;

      // Event listeners
      dateInput.addEventListener('change', updateDailyLabStatus);

      // Initial load
      updateDailyLabStatus();
    });
  </script>
</body>
</html>